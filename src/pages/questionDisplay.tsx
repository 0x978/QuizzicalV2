import {GetServerSidePropsContext, InferGetServerSidePropsType, NextPage} from "next";
import axios from 'axios';
import AnswerButtons from "~/components/answerButtons";
import Head from "next/head";
import {useState} from "react";
import {nanoid} from "nanoid";

interface questionType {
    question: string,
    correctAnswer: string,
    incorrectAnswers: string[],
    difficulty: string,
}

const QuestionDisplay: NextPage< InferGetServerSidePropsType<typeof getServerSideProps>> = ({questions}) => {

    return(
        <>
            <Head>
                <title> Quizzical 2 </title>
                <meta name="description" content = "generated by create-t3-app" />
                <link rel = "icon" href= "/favicon.ico" />
            </Head>

            <main className="flex h-screen">
                <div className="m-auto" >
                    {questions.map((question:questionType) => {
                        return(
                            <div key={nanoid()} className="text-center max-w-5xl">
                                <h1 key={nanoid()} className="text-xl pt-6 text-indigo-500 font-bold m-2 ">{question.question}</h1>
                                <AnswerButtons correctAnswer={question.correctAnswer} incorrectAnswers={question.incorrectAnswers}key={nanoid()}/>
                            </div>
                        )
                    } )}
                </div>

            </main>
        </>
    )
}

export const getServerSideProps = async (context:GetServerSidePropsContext) => {
    const gamemode = context.query.gamemode

    if(gamemode === "easy" || gamemode === "medium" || gamemode === "hard"){
        const {data} = await axios.get<questionType[]>(`https://the-trivia-api.com/api/questions?limit=5&difficulty=${context.query.gamemode ||"easy"}`)
        return({
            props:{
                questions:data
            }
        })
    }
    else if(gamemode === "1980's"){
        const {data} = await axios.get<questionType[]>(`https://the-trivia-api.com/api/questions?limit=5&tags=${context.query.gamemode}`)
        return({
            props:{
                questions:data
            }
        })
    }

    const {data} = await axios.get<questionType[]>(`https://the-trivia-api.com/api/questions?categories=${context.query.gamemode}&limit=5`)

    return({
        props:{
            questions:data
        }
    })

}

export default QuestionDisplay;
