import {FC, useEffect} from "react"
import {signOut, useSession} from "next-auth/react";
import Head from "next/head";
import {useRouter} from "next/router";
import Swal from "sweetalert2"

const Settings: FC = ({}) => {
    const {data: session} = useSession()
    const router = useRouter()

    useEffect(() => {
        if(!session){
            void router.push("/")
        }
    },[session])

    function handleSignOut(){
        Swal.fire({
            title: 'Are you sure you want to log out?',
            text: "You will need to re-auth with one of the auth providers to log back in",
            showDenyButton: true,
            confirmButtonText: 'Logout',
            denyButtonText: `Cancel`,
            focusDeny:true,
            width:600
        }).then((result) => {
            if (result.isConfirmed) {
                Swal.fire({
                    icon:"success",
                    title:"Signed Out!",
                    timer: 1000,
                    showConfirmButton:false,
                }).then(()=>{
                    void signOut()
                }).catch((err) => console.log(err))
            }
        }).catch((err) => console.log(err))
    }

    return(
        <>
            <Head>
                <title> Quizzical Settings</title>
                <meta name="description" content = "generated by create-t3-app" />
                <link rel = "icon" href= "/favicon.ico" />
            </Head>

            <main>
                <div className="flex h-screen">
                    <div className="m-auto text-indigo-500 text-center align-middle">
                        <h1 className="text-4xl font-extrabold">Settings</h1>
                        <div className="pt-5 flex flex-col space-y-4">
                            <button
                                className="text-white bg-red-600 p-2 rounded-full transition hover:bg-red-700 w-44 text-base font-semibold"
                                onClick={() => handleSignOut()}>
                                Sign out
                            </button>
                            <button
                                className="text-white bg-green-500 p-2 rounded-full transition hover:bg-green-700-700 w-44 text-base font-semibold"
                                onClick={() => void router.push("/")}>
                                Return
                            </button>
                        </div>
                    </div>
                </div>
            </main>
        </>
    )
}


export default Settings