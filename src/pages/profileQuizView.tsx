import {useRouter} from "next/router";
import {api} from "~/utils/api";
import {quizDataType} from "../../types/types";
import Head from "next/head";


const ProfileQuizView = () => {
    const router = useRouter();
    const {gameID} = router.query;


    const { data: fetchedQuiz } = api.quiz.getQuizzesByQuizID.useQuery({
        quizID: Number.parseInt(gameID as string),
    });



    const quizData = fetchedQuiz?.quizData as unknown as quizDataType; // TODO THIS IS NOT GOOD, move away from JSON on schema.
    console.log(quizData)

    return (
        <>
            <Head>
                <title> Quizzical 2 </title>
                <meta name="description" content = "generated by create-t3-app" />
                <link rel = "icon" href= "/favicon.ico" />
            </Head>


            <main className="flex h-screen">
                <div className="m-auto" >

                    {quizData ? (
                            <div>
                                <div className="text-center text-indigo-500 font-extrabold ">
                                    <h1 className="text-5xl my-5 ">Game Results </h1>
                                    <h1 className="my-3" >Game Number: {gameID} </h1>
                                    <h1 className="my-3">score: {fetchedQuiz?.score} out of 5</h1>
                                </div>

                                {quizData.questions.map((ques,i) => {
                                    return (
                                        <div key={i} className={`p-3 ${quizData.selectedAnswers[i] === quizData.correctAns[i] ? "bg-green-800" : "bg-red-900"}`}>
                                            <h1 >{ques}</h1>
                                            <div className="flex space-x-3"> {/* div for answers*/}
                                                {quizData.allAnswers[i] // fetches all answers for current question
                                                    .map((ans,j) => {
                                                        return(
                                                            <h1 key={j} className={`${(ans === quizData.correctAns[i]) && "text-green-400"}`}>{ans}</h1>
                                                        )
                                                    })}
                                            </div>
                                        </div>
                                    )
                                })}

                                <div className="flex justify-center pt-5">
                                    <button className="text-white bg-red-500 text-sm p-2 rounded-full transition hover:bg-red-700 w-64 h-11 text-xl font-semibold "
                                            onClick={() => void router.push("/profile")}>Return</button>
                                </div>
                            </div>)

                        :
                        <div>
                            <h1>Loading...</h1>
                        </div>
                    }
                </div>
            </main>
        </>
    )

}
export default ProfileQuizView;
